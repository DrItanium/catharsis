; Entry point into worldly 
; Modify this to fit your system.
(batch* (proton: /lib/core.clp))
(batch* (proton: /lib/neutron.clp))
; begin worldly 
(defclass pixel
  "Represents a location on a map"
  (is-a USER)
  (slot position-x
        (type INTEGER)
        (storage local)
        (default ?NONE))
  (slot position-y
        (type INTEGER)
        (storage local)
        (default ?NONE))
  (slot type 
        (type SYMBOL)
        (allowed-symbols empty solid))
  (slot color
        (type SYMBOL)
        (default-dynamic black)))

(defglobal MAIN
           ?*block-width* = 32
           ?*block-height* = 32
           ?*screen-width* = 512
           ?*screen-height* = 384
           ?*blocks-wide* = (/ ?*screen-width* ?*block-width*)
           ?*blocks-tall* = (/ ?*screen-height* ?*block-height*)
           ?*block-count* = (* ?*blocks-wide* ?*blocks-tall*))

(defmethod on-resized
  "method to handle resizing of the window"
  ((?value SYMBOL (not (neq ?value FALSE TRUE))))
  (if (and ?value (< (getwindow) 0)) then
    (printout werror "ERROR: couldn't reattach to window" crlf)
    (exit))
  (screen/draw [screen-dim] [screen] [ZP])
  (assert (layout pixels)))



(definstances screen-pieces 
              (scratch-rect of rectangle (x 0) (y 0) (bx 0) (by 0))
              (screen-dim of rectangle (x 0) (y 0) 
                          (bx ?*screen-width*) 
                          (by ?*screen-height*))
              (block of rectangle (x 0) (y 0) 
                     (bx ?*block-width*) 
                     (by ?*block-height*))
              (screen of image (rectangle [screen-dim])
                      (replicate TRUE)
                      (color (get-standard-color grey)))
              (solid-pixel of image 
                           (rectangle [block])
                           (replicate TRUE)
                           (color (get-standard-color black)))
              (empty-pixel of image 
                           (rectangle [block])
                           (replicate TRUE)
                           (color (get-standard-color blue)))
              ( of pixel (type solid) (position-x 15) (position-y 12))
              ( of pixel (type solid) (position-x 15) (position-y 11))
              ( of pixel (type solid) (position-x 15) (position-y 10))
              ( of pixel (type solid) (position-x 15) (position-y 9))
              ( of pixel (type solid) (position-x 15) (position-y 8))
              ( of pixel (type solid) (position-x 15) (position-y 7))
              ( of pixel (type solid) (position-x 15) (position-y 6))
              ( of pixel (type solid) (position-x 15) (position-y 5))
              ( of pixel (type solid) (position-x 15) (position-y 4))
              ( of pixel (type solid) (position-x 15) (position-y 3))
              ( of pixel (type solid) (position-x 15) (position-y 2))
              ( of pixel (type solid) (position-x 15) (position-y 1))
              ( of pixel (type solid) (position-x 15) (position-y 0))
              ( of pixel (type solid) (position-x 14) (position-y 12))
              ( of pixel (type solid) (position-x 14) (position-y 11))
              ( of pixel (type solid) (position-x 14) (position-y 10))
              ( of pixel (type solid) (position-x 14) (position-y 9))
              ( of pixel (type solid) (position-x 14) (position-y 8))
              ( of pixel (type solid) (position-x 14) (position-y 7))
              ( of pixel (type solid) (position-x 14) (position-y 6))
              ( of pixel (type solid) (position-x 14) (position-y 5))
              ( of pixel (type solid) (position-x 14) (position-y 4))
              ( of pixel (type solid) (position-x 14) (position-y 3))
              ( of pixel (type solid) (position-x 14) (position-y 2))
              ( of pixel (type solid) (position-x 14) (position-y 1))
              ( of pixel (type solid) (position-x 14) (position-y 0))
              ( of pixel (type solid) (position-x 13) (position-y 12))
              ( of pixel (type solid) (position-x 13) (position-y 11))
              ( of pixel (type solid) (position-x 13) (position-y 10))
              ( of pixel (type solid) (position-x 13) (position-y 9))
              ( of pixel (type solid) (position-x 13) (position-y 8))
              ( of pixel (type solid) (position-x 13) (position-y 7))
              ( of pixel (type solid) (position-x 13) (position-y 6))
              ( of pixel (type solid) (position-x 13) (position-y 5))
              ( of pixel (type solid) (position-x 13) (position-y 4))
              ( of pixel (type solid) (position-x 13) (position-y 3))
              ( of pixel (type solid) (position-x 13) (position-y 2))
              ( of pixel (type solid) (position-x 13) (position-y 1))
              ( of pixel (type solid) (position-x 13) (position-y 0))
              ( of pixel (type solid) (position-x 12) (position-y 12))
              ( of pixel (type solid) (position-x 12) (position-y 11))
              ( of pixel (type solid) (position-x 12) (position-y 10))
              ( of pixel (type solid) (position-x 12) (position-y 9))
              ( of pixel (type solid) (position-x 12) (position-y 8))
              ( of pixel (type solid) (position-x 12) (position-y 7))
              ( of pixel (type solid) (position-x 12) (position-y 6))
              ( of pixel (type solid) (position-x 12) (position-y 5))
              ( of pixel (type solid) (position-x 12) (position-y 4))
              ( of pixel (type solid) (position-x 12) (position-y 3))
              ( of pixel (type solid) (position-x 12) (position-y 2))
              ( of pixel (type solid) (position-x 12) (position-y 1))
              ( of pixel (type solid) (position-x 12) (position-y 0))
              ( of pixel (type solid) (position-x 11) (position-y 12))
              ( of pixel (type solid) (position-x 11) (position-y 11))
              ( of pixel (type solid) (position-x 11) (position-y 10))
              ( of pixel (type solid) (position-x 11) (position-y 9))
              ( of pixel (type solid) (position-x 11) (position-y 8))
              ( of pixel (type solid) (position-x 11) (position-y 7))
              ( of pixel (type solid) (position-x 11) (position-y 6))
              ( of pixel (type solid) (position-x 11) (position-y 5))
              ( of pixel (type solid) (position-x 11) (position-y 4))
              ( of pixel (type solid) (position-x 11) (position-y 3))
              ( of pixel (type solid) (position-x 11) (position-y 2))
              ( of pixel (type solid) (position-x 11) (position-y 1))
              ( of pixel (type solid) (position-x 11) (position-y 0))
              ( of pixel (type solid) (position-x 10) (position-y 12))
              ( of pixel (type solid) (position-x 10) (position-y 11))
              ( of pixel (type solid) (position-x 10) (position-y 10))
              ( of pixel (type solid) (position-x 10) (position-y 9))
              ( of pixel (type solid) (position-x 10) (position-y 8))
              ( of pixel (type solid) (position-x 10) (position-y 7))
              ( of pixel (type solid) (position-x 10) (position-y 6))
              ( of pixel (type solid) (position-x 10) (position-y 5))
              ( of pixel (type solid) (position-x 10) (position-y 4))
              ( of pixel (type solid) (position-x 10) (position-y 3))
              ( of pixel (type solid) (position-x 10) (position-y 2))
              ( of pixel (type solid) (position-x 10) (position-y 1))
              ( of pixel (type solid) (position-x 10) (position-y 0))
              ( of pixel (type solid) (position-x 9) (position-y 12))
              ( of pixel (type solid) (position-x 9) (position-y 11))
              ( of pixel (type solid) (position-x 9) (position-y 10))
              ( of pixel (type solid) (position-x 9) (position-y 9))
              ( of pixel (type solid) (position-x 9) (position-y 8))
              ( of pixel (type solid) (position-x 9) (position-y 7))
              ( of pixel (type solid) (position-x 9) (position-y 6))
              ( of pixel (type solid) (position-x 9) (position-y 5))
              ( of pixel (type solid) (position-x 9) (position-y 4))
              ( of pixel (type solid) (position-x 9) (position-y 3))
              ( of pixel (type solid) (position-x 9) (position-y 2))
              ( of pixel (type solid) (position-x 9) (position-y 1))
              ( of pixel (type solid) (position-x 9) (position-y 0))
              ( of pixel (type solid) (position-x 8) (position-y 12))
              ( of pixel (type solid) (position-x 8) (position-y 11))
              ( of pixel (type solid) (position-x 8) (position-y 10))
              ( of pixel (type solid) (position-x 8) (position-y 9))
              ( of pixel (type solid) (position-x 8) (position-y 8))
              ( of pixel (type solid) (position-x 8) (position-y 7))
              ( of pixel (type solid) (position-x 8) (position-y 6))
              ( of pixel (type solid) (position-x 8) (position-y 5))
              ( of pixel (type solid) (position-x 8) (position-y 4))
              ( of pixel (type solid) (position-x 8) (position-y 3))
              ( of pixel (type solid) (position-x 8) (position-y 2))
              ( of pixel (type solid) (position-x 8) (position-y 1))
              ( of pixel (type solid) (position-x 8) (position-y 0))
              ( of pixel (type solid) (position-x 7) (position-y 12))
              ( of pixel (type solid) (position-x 7) (position-y 11))
              ( of pixel (type solid) (position-x 7) (position-y 10))
              ( of pixel (type solid) (position-x 7) (position-y 9))
              ( of pixel (type solid) (position-x 7) (position-y 8))
              ( of pixel (type solid) (position-x 7) (position-y 7))
              ( of pixel (type solid) (position-x 7) (position-y 6))
              ( of pixel (type solid) (position-x 7) (position-y 5))
              ( of pixel (type solid) (position-x 7) (position-y 4))
              ( of pixel (type solid) (position-x 7) (position-y 3))
              ( of pixel (type solid) (position-x 7) (position-y 2))
              ( of pixel (type solid) (position-x 7) (position-y 1))
              ( of pixel (type solid) (position-x 7) (position-y 0))
              ( of pixel (type solid) (position-x 6) (position-y 12))
              ( of pixel (type solid) (position-x 6) (position-y 11))
              ( of pixel (type solid) (position-x 6) (position-y 10))
              ( of pixel (type solid) (position-x 6) (position-y 9))
              ( of pixel (type solid) (position-x 6) (position-y 8))
              ( of pixel (type solid) (position-x 6) (position-y 7))
              ( of pixel (type solid) (position-x 6) (position-y 6))
              ( of pixel (type solid) (position-x 6) (position-y 5))
              ( of pixel (type solid) (position-x 6) (position-y 4))
              ( of pixel (type solid) (position-x 6) (position-y 3))
              ( of pixel (type solid) (position-x 6) (position-y 2))
              ( of pixel (type solid) (position-x 6) (position-y 1))
              ( of pixel (type solid) (position-x 6) (position-y 0))
              ( of pixel (type solid) (position-x 5) (position-y 12))
              ( of pixel (type solid) (position-x 5) (position-y 11))
              ( of pixel (type solid) (position-x 5) (position-y 10))
              ( of pixel (type solid) (position-x 5) (position-y 9))
              ( of pixel (type solid) (position-x 5) (position-y 8))
              ( of pixel (type solid) (position-x 5) (position-y 7))
              ( of pixel (type solid) (position-x 5) (position-y 6))
              ( of pixel (type solid) (position-x 5) (position-y 5))
              ( of pixel (type solid) (position-x 5) (position-y 4))
              ( of pixel (type solid) (position-x 5) (position-y 3))
              ( of pixel (type solid) (position-x 5) (position-y 2))
              ( of pixel (type solid) (position-x 5) (position-y 1))
              ( of pixel (type solid) (position-x 5) (position-y 0))
              ( of pixel (type solid) (position-x 4) (position-y 12))
              ( of pixel (type solid) (position-x 4) (position-y 11))
              ( of pixel (type solid) (position-x 4) (position-y 10))
              ( of pixel (type solid) (position-x 4) (position-y 9))
              ( of pixel (type solid) (position-x 4) (position-y 8))
              ( of pixel (type solid) (position-x 4) (position-y 7))
              ( of pixel (type solid) (position-x 4) (position-y 6))
              ( of pixel (type solid) (position-x 4) (position-y 5))
              ( of pixel (type solid) (position-x 4) (position-y 4))
              ( of pixel (type solid) (position-x 4) (position-y 3))
              ( of pixel (type solid) (position-x 4) (position-y 2))
              ( of pixel (type solid) (position-x 4) (position-y 1))
              ( of pixel (type solid) (position-x 4) (position-y 0))
              ( of pixel (type solid) (position-x 3) (position-y 12))
              ( of pixel (type solid) (position-x 3) (position-y 11))
              ( of pixel (type solid) (position-x 3) (position-y 10))
              ( of pixel (type solid) (position-x 3) (position-y 9))
              ( of pixel (type solid) (position-x 3) (position-y 8))
              ( of pixel (type solid) (position-x 3) (position-y 7))
              ( of pixel (type solid) (position-x 3) (position-y 6))
              ( of pixel (type solid) (position-x 3) (position-y 5))
              ( of pixel (type solid) (position-x 3) (position-y 4))
              ( of pixel (type solid) (position-x 3) (position-y 3))
              ( of pixel (type solid) (position-x 3) (position-y 2))
              ( of pixel (type empty) (position-x 3) (position-y 1))
              ( of pixel (type solid) (position-x 3) (position-y 0))
              ( of pixel (type solid) (position-x 2) (position-y 12))
              ( of pixel (type solid) (position-x 2) (position-y 11))
              ( of pixel (type solid) (position-x 2) (position-y 10))
              ( of pixel (type solid) (position-x 2) (position-y 9))
              ( of pixel (type solid) (position-x 2) (position-y 8))
              ( of pixel (type solid) (position-x 2) (position-y 7))
              ( of pixel (type solid) (position-x 2) (position-y 6))
              ( of pixel (type solid) (position-x 2) (position-y 5))
              ( of pixel (type solid) (position-x 2) (position-y 4))
              ( of pixel (type solid) (position-x 2) (position-y 3))
              ( of pixel (type solid) (position-x 2) (position-y 2))
              ( of pixel (type solid) (position-x 2) (position-y 1))
              ( of pixel (type solid) (position-x 2) (position-y 0))
              ( of pixel (type solid) (position-x 1) (position-y 12))
              ( of pixel (type solid) (position-x 1) (position-y 11))
              ( of pixel (type solid) (position-x 1) (position-y 10))
              ( of pixel (type solid) (position-x 1) (position-y 9))
              ( of pixel (type solid) (position-x 1) (position-y 8))
              ( of pixel (type solid) (position-x 1) (position-y 7))
              ( of pixel (type solid) (position-x 1) (position-y 6))
              ( of pixel (type solid) (position-x 1) (position-y 5))
              ( of pixel (type solid) (position-x 1) (position-y 4))
              ( of pixel (type solid) (position-x 1) (position-y 3))
              ( of pixel (type solid) (position-x 1) (position-y 2))
              ( of pixel (type solid) (position-x 1) (position-y 1))
              ( of pixel (type solid) (position-x 1) (position-y 0))
              ( of pixel (type solid) (position-x 0) (position-y 12))
              ( of pixel (type solid) (position-x 0) (position-y 11))
              ( of pixel (type solid) (position-x 0) (position-y 10))
              ( of pixel (type solid) (position-x 0) (position-y 9))
              ( of pixel (type solid) (position-x 0) (position-y 8))
              ( of pixel (type solid) (position-x 0) (position-y 7))
              ( of pixel (type solid) (position-x 0) (position-y 6))
              ( of pixel (type solid) (position-x 0) (position-y 5))
              ( of pixel (type solid) (position-x 0) (position-y 4))
              ( of pixel (type solid) (position-x 0) (position-y 3))
              ( of pixel (type solid) (position-x 0) (position-y 2))
              ( of pixel (type solid) (position-x 0) (position-y 1))
              ( of pixel (type solid) (position-x 0) (position-y 0))
              )
(deffacts query-operation
          (query input))



(defrule query-input
         ?f <- (query input)
         =>
         (retract ?f)
         (send [mouse] query)
         (send [keyboard] query)
         (assert (check mouse)
                 (check keyboard)))

(defrule process-mouse-inputs
         (declare (salience -1))
         ?f <- (check mouse)
         =>
         (retract ?f)
         (assert (query mouse)))



(defrule process-keyboard-inputs:quit
         (declare (salience 1))
         ?f <- (check keyboard)
         (object (is-a keyboard)
                 (name [keyboard])
                 (keys ESC))
         =>
         (retract ?f)
         (exit))

(defrule process-keyboard-inputs:left
         (declare (salience 1))
         ?f <- (check keyboard)
         (object (is-a keyboard)
                 (name [keyboard])
                 (keys LEFT))
         ?old <- (object (is-a pixel)
                         (type empty)
                         (position-x ?x)
                         (position-y ?y))
         (test (> ?x 0))
         ?next <- (object (is-a pixel)
                          (type solid)
                          (position-x ?bx&:(= ?bx (- ?x 1)))
                          (position-y ?y))

         =>
         (retract ?f)
         (modify-instance ?old (type solid))
         (modify-instance ?next (type empty))
         (assert (query keyboard)
                 (layout pixels)))

(defrule process-keyboard-inputs:right
         (declare (salience 1))
         ?f <- (check keyboard)
         (object (is-a keyboard)
                 (name [keyboard])
                 (keys RIGHT))
         ?old <- (object (is-a pixel)
                         (type empty)
                         (position-x ?x)
                         (position-y ?y))
         (test (< ?x 16))
         ?next <- (object (is-a pixel)
                          (type solid)
                          (position-x ?bx&:(= ?bx (+ ?x 1)))
                          (position-y ?y))

         =>
         (retract ?f)
         (modify-instance ?old (type solid))
         (modify-instance ?next (type empty))
         (assert (query keyboard)
                 (layout pixels)))

(defrule process-keyboard-inputs:up
         (declare (salience 1))
         ?f <- (check keyboard)
         (object (is-a keyboard)
                 (name [keyboard])
                 (keys UP))
         ?old <- (object (is-a pixel)
                         (type empty)
                         (position-x ?x)
                         (position-y ?y))
         (test (> ?y 0))
         ?next <- (object (is-a pixel)
                          (type solid)
                          (position-y ?by&:(= ?by (- ?y 1)))
                          (position-x ?x))

         =>
         (retract ?f)
         (modify-instance ?old (type solid))
         (modify-instance ?next (type empty))
         (assert (query keyboard)
                 (layout pixels)))

(defrule process-keyboard-inputs:down
         (declare (salience 1))
         ?f <- (check keyboard)
         (object (is-a keyboard)
                 (name [keyboard])
                 (keys DOWN))
         ?old <- (object (is-a pixel)
                         (type empty)
                         (position-x ?x)
                         (position-y ?y))
         (test (< ?y 12))
         ?next <- (object (is-a pixel)
                          (type solid)
                          (position-y ?by&:(= ?by (+ ?y 1)))
                          (position-x ?x))

         =>
         (retract ?f)
         (modify-instance ?old (type solid))
         (modify-instance ?next (type empty))
         (assert (query keyboard)
                 (layout pixels)))

(defrule process-keyboard-inputs:nil
         (declare (salience 1))
         ?f <- (check keyboard)
         (object (is-a keyboard)
                 (name [keyboard])
                 (keys NIL))
         =>
         (retract ?f)
         (assert (query keyboard)))

(defrule process-keyboard-inputs
         ?f <- (check keyboard)
         (object (is-a keyboard)
                 (name [keyboard])
                 (keys ?b&~NIL))
         =>
         (retract ?f)
         (assert (query keyboard)))

(defrule ready-to-query-input-again 
         ?f <- (query keyboard)
         ?f2 <- (query mouse)
         =>
         (retract ?f ?f2)
         (send [mouse] clear)
         (send [keyboard] clear)
         (assert (query input)))

(defrule relayout:image:solid
         (declare (salience 10000))
         (layout pixels)
         (object (is-a pixel)
                 (type solid)
                 (position-x ?x)
                 (position-y ?y))
         (object (is-a rectangle)
                 (name [block])
                 (bx ?bx)
                 (by ?by))
         =>
         (modify-instance [scratch-rect] 
                          (x (* ?bx ?x))
                          (y (* ?by ?y))
                          (bx (* ?bx (+ ?x 1)))
                          (by (* ?by (+ ?y 1))))
         (send [scratch-rect] build-pointer)
         (screen/draw [scratch-rect] [solid-pixel] [ZP]))

(defrule relayout:image:empty
         (declare (salience 10000))
         (layout pixels)
         (object (is-a pixel)
                 (type empty)
                 (position-x ?x)
                 (position-y ?y))
         (object (is-a rectangle)
                 (name [block])
                 (bx ?bx)
                 (by ?by))
         =>
         (modify-instance [scratch-rect] 
                          (x (* ?bx ?x))
                          (y (* ?by ?y))
                          (bx (* ?bx (+ ?x 1)))
                          (by (* ?by (+ ?y 1))))
         (format t "(%d,%d)%n" ?x ?y)
         (send [scratch-rect] build-pointer)
         (screen/draw [scratch-rect] [empty-pixel] [ZP]))

(defrule relayout:image:done
         (declare (salience 9999))
         ?f <- (layout pixels)
         =>
         (retract ?f))

(batch* (proton: /lib/reset-run-exit.clp))
